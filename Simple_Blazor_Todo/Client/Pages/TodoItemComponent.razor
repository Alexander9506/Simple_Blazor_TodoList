@using Simple_Blazor_Todo.Shared

@if(todo != null) {
    
    <div class="border-dark border-1">
        <div class="input-group" >
            <div class="input-group-prepend">
                <div class="input-group-text">
                    <input class="check" type="checkbox" @bind="@todo.IsDone" />
                </div>
            </div>
            <input type="text" class="form-control" @bind="todo.Titel" 
                   style="@(todo.IsDone ? "text-decoration-line: line-through" : "")" 
                   @attributes="(todo.IsDone ? attributesDisabled : null)"/>
            <div>
                <button class="btn btn-primary" @onclick="ToggleCollapse">collapse</button>
                <button class="btn btn-secondary" @onclick="(e) => AddChildItem(todo)">+</button>
            </div>
        </div>
        @if(todo.ChildItems != null && todo.ChildItems.Count() > 0) {
            <div>
                @foreach (var item in todo.ChildItems) {
                    <div class="ml-2 mt-1">
                        <TodoItemComponent todo="item"></TodoItemComponent>
                    </div>
                }
            </div>
        }
    <div class="@DetailsCssClasses from-group mt-1">
        <label>Done since</label>

        <div class="input-group">
            <input class="form-control" type="date" @bind="todo.DoneAt" />
            <input class="form-control" type="time" @bind="todo.DoneAt" />
        </div>

        <label>Deadline</label>
        <div class="input-group">
            <input class="form-control" type="date" @bind="todo.DeadLine" />
            <input class="form-control" type="time" @bind="todo.DeadLine" />
        </div>

        <label>Description</label>
        <textarea class="form-control" rows="4" @bind="todo.Description"></textarea>
    </div>
    </div>
}

@code {
    private bool collapseDetails = true;
    private string DetailsCssClasses => collapseDetails ? "collapse" : null;

    private Dictionary<string, object> attributesDisabled = new Dictionary<string, object>() {
        {"disabled", ""}
    };

    [Parameter]
    public TodoItem todo { get; set; }

    private void ToggleCollapse() => collapseDetails = !collapseDetails;

    private void AddChildItem(TodoItem parent)
    {
        if(parent.ChildItems == null)
        {
            parent.ChildItems = new List<TodoItem>();
        }
        parent.ChildItems.Add(new TodoItem() { });
    }
}
